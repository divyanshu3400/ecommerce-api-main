# Generated by Django 4.2.4 on 2023-09-25 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_1', models.CharField(max_length=100)),
                ('address_line_2', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'user_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(max_length=200)),
                ('meta_description', models.TextField()),
                ('status', models.BooleanField()),
                ('brand_image', models.ImageField(upload_to='media/brand_logos')),
            ],
            options={
                'verbose_name': 'Product Brand',
                'verbose_name_plural': 'Product Brands',
                'db_table': 'products_brand',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'verbose_name': 'User Cart',
                'verbose_name_plural': 'User Carts',
                'db_table': 'user_cart',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChildCategory',
            fields=[
                ('child_cat_id', models.AutoField(primary_key=True, serialize=False)),
                ('child_cat_name', models.CharField(max_length=200)),
                ('child_cat_status', models.BooleanField()),
                ('child_cat_meta_name', models.TextField()),
                ('child_cat_meta_desc', models.TextField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Child Category',
                'verbose_name_plural': 'Child Categories',
                'db_table': 'child_categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('color_id', models.AutoField(primary_key=True, serialize=False)),
                ('color_name', models.CharField(max_length=200)),
                ('color_hex', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
                'db_table': 'color',
            },
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Logo',
                'verbose_name_plural': 'Logoes',
                'db_table': 'educart_logo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NavbarCat',
            fields=[
                ('nav_id', models.AutoField(primary_key=True, serialize=False)),
                ('nav_name', models.CharField(max_length=200)),
                ('nav_logo', models.ImageField(default='images', upload_to='media/navbar_logos/')),
                ('nav_status', models.BooleanField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Navbar Category',
                'verbose_name_plural': 'Navbar Categories',
                'db_table': 'navbar_cat',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_date', models.DateTimeField(auto_now_add=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], max_length=20)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'user_order',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParentCategory',
            fields=[
                ('pcat_id', models.AutoField(primary_key=True, serialize=False)),
                ('pcat_name', models.CharField(max_length=200)),
                ('pcat_logos', models.ImageField(default='images', upload_to='media/parent_cat_logo/')),
                ('pcat_status', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('nav', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.navbarcat')),
            ],
            options={
                'verbose_name': 'Parent Category',
                'verbose_name_plural': 'Parent Categories',
                'db_table': 'parent_categories',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=200)),
                ('discount_available', models.BooleanField()),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('meta_title', models.SlugField(blank=True, max_length=200, unique=True)),
                ('product_description', models.TextField()),
                ('product_available', models.BooleanField()),
                ('units_in_stock', models.IntegerField()),
                ('meta_description', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('category_name', models.CharField(editable=False, max_length=50)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce_app.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce_app.childcategory')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'db_table': 'state_list',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BookProduct',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ecommerce_app.product')),
                ('author', models.CharField(max_length=100)),
                ('publication_date', models.DateField()),
                ('publisher', models.CharField(max_length=100)),
                ('isbn', models.CharField(max_length=20)),
                ('genre', models.CharField(max_length=100)),
                ('book_class', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Book Product',
                'verbose_name_plural': 'Book Products',
                'db_table': 'book_product',
                'managed': True,
            },
            bases=('ecommerce_app.product',),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('age', models.IntegerField(default=0, null=True)),
                ('gender', models.CharField(blank=True, default='NA', max_length=200, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'db_table': 'user_profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductSizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_size', models.CharField(max_length=20)),
                ('product_type', models.ManyToManyField(related_name='product_sizes', to='ecommerce_app.parentcategory')),
            ],
            options={
                'verbose_name': 'Product Size',
                'verbose_name_plural': 'Product Sizes',
                'db_table': 'product_size',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.product')),
            ],
            options={
                'verbose_name': 'Product Inventory',
                'verbose_name_plural': 'Product Inventories',
                'db_table': 'product_inventory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/product_images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.product')),
            ],
            options={
                'db_table': 'product_image',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('transaction_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
                ('status', models.BooleanField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='ecommerce_app.order')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'user_payment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OTP Token',
                'verbose_name_plural': 'OTP Tokens',
                'db_table': 'otp_token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('sub_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.product')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'order_item',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(through='ecommerce_app.OrderItem', to='ecommerce_app.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce_app.address'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'db_table': 'user_feedback',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmailConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Confirmation',
                'verbose_name_plural': 'Email Confirmations',
                'db_table': 'email_confirmation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.state')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'db_table': 'cities_list',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='childcategory',
            name='pcat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.parentcategory'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.product')),
            ],
            options={
                'verbose_name': 'Cart Item',
                'verbose_name_plural': 'Cart Items',
                'db_table': 'car_item',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(through='ecommerce_app.CartItem', to='ecommerce_app.product'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='brand',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.parentcategory'),
        ),
        migrations.AddField(
            model_name='address',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='ecommerce_app.profile'),
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce_app.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.CreateModel(
            name='FashionProduct',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ecommerce_app.product')),
                ('material', models.CharField(max_length=100)),
                ('colors', models.ManyToManyField(blank=True, to='ecommerce_app.color')),
                ('sizes', models.ManyToManyField(blank=True, to='ecommerce_app.productsizes')),
            ],
            options={
                'verbose_name': 'Fashion Product',
                'verbose_name_plural': 'Fashion Products',
                'db_table': 'fashion_product',
                'managed': True,
            },
            bases=('ecommerce_app.product',),
        ),
        migrations.CreateModel(
            name='ElectronicProduct',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ecommerce_app.product')),
                ('model_number', models.CharField(max_length=50)),
                ('display_size', models.CharField(max_length=20)),
                ('resolution', models.CharField(max_length=20)),
                ('processor', models.CharField(max_length=100)),
                ('cellular_technology', models.CharField(max_length=20)),
                ('memory', models.CharField(max_length=50)),
                ('storage', models.CharField(max_length=50)),
                ('battery_life', models.CharField(max_length=50)),
                ('operating_system', models.CharField(max_length=100)),
                ('connectivity', models.CharField(max_length=100)),
                ('warranty', models.CharField(max_length=100)),
                ('is_available', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('colors', models.ManyToManyField(blank=True, default=None, to='ecommerce_app.color')),
            ],
            options={
                'verbose_name': 'Electronic Product',
                'verbose_name_plural': 'Electronic Products',
                'db_table': 'electronic_product',
            },
            bases=('ecommerce_app.product',),
        ),
    ]
